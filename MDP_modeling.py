import numpy as np
import pandas as pd
import random
from itertools import product
from Learner.LDBA import LDBA, LDBAUtil

pd.set_option('display.max_rows', 100)

#grid-world 4*5-------------------------------------------------------------------------------------------------------------------------------
physical_matrix = np.array([ [ #0:up
                                 #           0                      1                      2                      3
                                 [ [(0,0), (0,0), (0,1)], [(0,1), (0,0), (0,2)], [(0,2), (0,1), (0,3)], [(0,3), (0,2), (0,3)] ],  # 0
                                 [ [(0,0), (1,0), (1,1)], [(0,1), (1,0), (1,2)], [(0,2), (1,1), (1,3)], [(0,3), (1,2), (1,3)] ],  # 1
                                 [ [(2,0), (2,0), (2,0)], [(1,1), (2,1), (2,2)], [(1,2), (2,1), (2,3)], [(1,3), (2,2), (2,3)] ],  # 2
                                 [ [(3,0), (3,0), (3,0)], [(2,1), (3,0), (3,2)], [(3,2), (3,2), (3,2)], [(2,3), (3,2), (3,3)] ],  # 3
                                 [ [(3,0), (4,0), (4,1)], [(3,1), (4,0), (4,2)], [(3,2), (4,1), (4,3)], [(3,3), (4,2), (4,3)] ]  # 4
                               ],
                               [ #1:down
                                 #           0                      1                      2                      3
                                 [ [(1,0), (0,0), (0,1)], [(1,1), (0,0), (0,2)], [(1,2), (0,1), (0,3)], [(1,3), (0,2), (0,3)] ], #0
                                 [ [(1,0), (1,0), (1,1)], [(2,1), (1,0), (1,2)], [(2,2), (1,1), (1,3)], [(2,3), (1,2), (1,3)] ], #1
                                 [ [(2,0), (2,0), (2,0)], [(3,1), (2,1), (2,2)], [(3,2), (2,1), (2,3)], [(3,3), (2,2), (2,3)] ], #2
                                 [ [(3,0), (3,0), (3,0)], [(4,1), (3,0), (3,2)], [(3,2), (3,2), (3,2)], [(4,3), (3,2), (3,3)] ], #3
                                 [ [(4,0), (4,0), (4,1)], [(4,1), (4,0), (4,2)], [(4,2), (4,1), (4,3)], [(4,3), (4,2), (4,3)] ]  #4
                               ],
                               [
                                 #2:left
                                 #           0                      1                      2                      3
                                 [ [(0,0), (0,0), (1,0)], [(0,0), (0,1), (1,1)], [(0,1), (0,2), (1,2)], [(0,2), (0,3), (1,3)] ], #0
                                 [ [(1,0), (0,0), (1,0)], [(1,0), (0,1), (2,1)], [(1,1), (0,2), (2,2)], [(1,2), (0,3), (2,3)] ], #1
                                 [ [(2,0), (2,0), (2,0)], [(2,1), (1,1), (3,1)], [(2,1), (1,2), (3,2)], [(2,2), (1,3), (3,3)] ], #2
                                 [ [(3,0), (3,0), (3,0)], [(3,0), (2,1), (4,1)], [(3,2), (3,2), (3,2)], [(3,2), (2,3), (4,3)] ], #3
                                 [ [(4,0), (3,0), (4,0)], [(4,0), (3,1), (4,1)], [(4,1), (3,2), (4,2)], [(4,2), (3,3), (4,3)] ]  #4
                               ],
                               [
                                 #3:right
                                 #           0                      1                      2                      3
                                 [ [(0,1), (0,0), (1,0)], [(0,2), (0,1), (1,1)], [(0,3), (0,2), (1,2)], [(0,3), (0,3), (1,3)] ], #0
                                 [ [(1,1), (0,0), (1,0)], [(1,2), (0,1), (2,1)], [(1,3), (0,2), (2,2)], [(1,3), (0,3), (2,3)] ], #1
                                 [ [(2,0), (2,0), (2,0)], [(2,2), (1,1), (3,1)], [(2,3), (1,2), (3,2)], [(2,3), (1,3), (3,3)] ], #2
                                 [ [(3,0), (3,0), (3,0)], [(3,2), (2,1), (4,1)], [(3,2), (3,2), (3,2)], [(3,3), (2,3), (4,3)] ], #3
                                 [ [(4,1), (3,0), (4,0)], [(4,2), (3,1), (4,1)], [(4,3), (3,2), (4,2)], [(4,3), (3,3), (4,3)] ]  #4
                               ],
                            ])

human_action = np.array([
                        #      0             1             2             3
                        [ [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3] ],    #0
                        [ [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3] ],    #1
                        [ [],           [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3] ],    #2
                        [ [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3] ],    #3
                        [ [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3] ]     #4
                       ])
switch_action = np.array([
                        #    0       1       2       3
                        [ [0, 1], [0, 1], [0, 1], [0, 1] ],    #0
                        [ [0, 1], [0, 1], [0, 1], [0, 1] ],    #1
                        [ [],     [0, 1], [0, 1], [0, 1] ],    #2
                        [ [0, 1], [0, 1], [0, 1], [0, 1] ],    #3
                        [ [0, 1], [0, 1], [0, 1], [0, 1] ]     #4
                       ])
machine_policy = np.array([
                        # 0  1    2   3
                        [ 1, 1, None, 1 ],    #0
                        [ 3, 1, 3, 1 ],    #1
                        [ None, 1, None, 1 ],    #2
                        [ None, 0, None, 2 ],    #3
                        [ 0, None, None, 3 ]     #4
                       ])

lable_matrix = np.array([
                        #0  1  2  3
                        ['d', 'd', 'c', 'd'], #0
                        ['d', 'd', 'b', 'd'], #1
                        ['d', 'd', 'c', 'd'], #2
                        ['b', 'd', 'a', 'd'], #3
                        ['d', 'c', 'c', 'd']  #4
                       ])

np.save(file="resources/MDP/gridWorld4-5/physical_matrix.npy", arr=physical_matrix)
np.save(file="resources/MDP/gridWorld4-5/human_action.npy", arr=human_action)
np.save(file="resources/MDP/gridWorld4-5/switch_action.npy", arr=switch_action)
np.save(file="resources/MDP/gridWorld4-5/lable_matrix.npy", arr=lable_matrix)
np.save(file="resources/MDP/gridWorld4-5/machine_policy.npy", arr=machine_policy)


#------------------------------------------------------------------------------------------------------------------------------------------


#grid-world 3*4-------------------------------------------------------------------------------------------------------------------------------
# physical_matrix = np.array([ [ #0:up
#                                  #           0                      1                      2
#                                  [ [(0,0), (0,0), (0,1)], [(0,1), (0,0), (0,2)], [(0,2), (0,1), (0,3)] ],  # 0
#                                  [ [(0,0), (1,0), (1,1)], [(0,1), (1,0), (1,2)], [(1,2), (1,2), (1,2)] ],  # 1
#                                  [ [(2,0), (2,0), (2,0)], [(1,1), (2,1), (2,2)], [(2,2), (2,2), (2,2)] ],  # 2
#                                  [ [(3,0), (3,0), (3,0)], [(2,1), (3,0), (3,2)], [(2,2), (3,1), (3,2)] ],  # 3
#                                ],
#                                [ #1:down
#                                  #           0                      1                      2
#                                  [ [(1,0), (0,0), (0,1)], [(1,1), (0,0), (0,2)], [(1,2), (0,1), (0,3)] ], #0
#                                  [ [(1,0), (1,0), (1,1)], [(2,1), (1,0), (1,2)], [(1,2), (1,2), (1,2)] ], #1
#                                  [ [(2,0), (2,0), (2,0)], [(3,1), (2,1), (2,2)], [(2,2), (2,2), (2,2)] ], #2
#                                  [ [(3,0), (3,0), (3,0)], [(3,1), (3,0), (3,2)], [(3,2), (3,1), (3,2)] ], #3
#                                ],
#                                [
#                                  #2:left
#                                  #           0                      1                      2
#                                  [ [(0,0), (0,0), (1,0)], [(0,0), (0,1), (1,1)], [(0,1), (0,2), (1,2)] ], #0
#                                  [ [(1,0), (0,0), (1,0)], [(1,0), (0,1), (2,1)], [(1,2), (1,2), (1,2)] ], #1
#                                  [ [(2,0), (2,0), (2,0)], [(2,1), (1,1), (3,1)], [(2,2), (2,2), (2,2)] ], #2
#                                  [ [(3,0), (3,0), (3,0)], [(3,0), (2,1), (3,1)], [(3,1), (2,2), (3,2)] ], #3
#                                ],
#                                [
#                                  #3:right
#                                  #           0                      1                      2
#                                  [ [(0,1), (0,0), (1,0)], [(0,2), (0,1), (1,1)], [(0,3), (0,2), (1,2)] ], #0
#                                  [ [(1,1), (0,0), (1,0)], [(1,2), (0,1), (2,1)], [(1,2), (1,2), (1,2)] ], #1
#                                  [ [(2,0), (2,0), (2,0)], [(2,2), (1,1), (3,1)], [(2,2), (2,2), (2,2)] ], #2
#                                  [ [(3,0), (3,0), (3,0)], [(3,2), (2,1), (3,1)], [(3,2), (2,2), (3,2)] ], #3
#                                ],
#                             ])
#
# human_action = np.array([
#                         #      0             1             2             3
#                         [ [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3] ],    #0
#                         [ [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3] ],    #1
#                         [ [],           [0, 1, 2, 3], [0, 1, 2, 3] ],    #2
#                         [ [0, 1, 2, 3], [0, 1, 2, 3], [0, 1, 2, 3] ],    #3
#                        ])
# switch_action = np.array([
#                         #    0       1       2
#                         [ [0, 1], [0, 1], [0, 1] ],    #0
#                         [ [0, 1], [0, 1], [0, 1] ],    #1
#                         [ [],     [0, 1], [0, 1] ],    #2
#                         [ [0, 1], [0, 1], [0, 1] ],    #3
#                        ])
# machine_policy = np.array([
#                         # 0  1    2
#                         [ 1, 1, 1],    #0
#                         [ 3, 1, None],    #1
#                         [ None, 1, None],    #2
#                         [ None, 3, 0],    #3
#                        ])
#
# lable_matrix = np.array([
#                         #0  1  2  3
#                         ['d', 'd', 'd'], #0
#                         ['d', 'd', 'c'], #1
#                         ['d', 'd', 'a'], #2
#                         ['b', 'd', 'd'], #3
#                        ])
#
# np.save(file="resources/MDP/gridWorld4-3/physical_matrix.npy", arr=physical_matrix)
# np.save(file="resources/MDP/gridWorld4-3/human_action.npy", arr=human_action)
# np.save(file="resources/MDP/gridWorld4-3/switch_action.npy", arr=switch_action)
# np.save(file="resources/MDP/gridWorld4-3/lable_matrix.npy", arr=lable_matrix)
# np.save(file="resources/MDP/gridWorld4-3/machine_policy.npy", arr=machine_policy)

#------------------------------------------------------------------------------------------------------------------------------------------
